import argparse
import json
import pyxploitdb

def search_exploit(query, platform=None, cve=None, nb_results=1):
    if cve:
        results = pyxploitdb.searchCVE(cve, _print=False, nb_results=nb_results)
    else:
        results = pyxploitdb.searchEDB(query, platform=platform, _print=False, nb_results=nb_results)
    
    return results

def search_exploit_json(query, platform=None, cve=None, nb_results=1):
    results = search_exploit(query, platform=platform, cve=cve, nb_results=nb_results)
    json_results = json.dumps(results, indent=2)
    return json_results

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Search Exploit Database using pyxploitdb')
    parser.add_argument('query', type=str, help='Search query string')
    parser.add_argument('--platform', type=str, help='Specific platform to search exploits for', required=False)
    parser.add_argument('--cve', type=str, help='CVE identifier to search exploits for', required=False)
    parser.add_argument('--nb_results', type=int, help='Number of results to return (default: 1)', default=1)
    
    args = parser.parse_args()
    
    results = search_exploit(args.query, platform=args.platform, cve=args.cve, nb_results=args.nb_results)
    
    for result in results:
        print(result)